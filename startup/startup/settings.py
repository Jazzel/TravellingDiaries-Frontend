"""
Django settings for startup project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=x!dj(x1@ntu%+h$#mn**3^^2-q-exm0=m$zy%mgvz=zs%iun*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # ? Modules
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'corsheaders',
    # ? Authorization
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.twitter',
    'crispy_forms',
    'cities_light',
    'phonenumber_field',
    'rest_framework',
    # ? apps
    'accounts',
    'reviews',
    'destinations',
    'amenity',
    'hotels',
    'restaurants',
    'packages',
    'transport',
    'rentals',
    'diary',
    'groups',
    'post',
    'weather',

]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '807840282319-upqg6p4t0fsgerr8ia0nbb1n8qt7qjj1.apps.googleusercontent.com',
            'secret': 'fJD_2SlYjlYrmTcVJSl6Yw66',
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
    },
    'Twitter': {
        'APP': {
            'client_id': 'QOJcfOD9NzmxwrAhpqVdAt1uf',
            'secret': 'U8StBEmmJjeKuPEBpuUvua4N0u4E8w66s0EaMJNMgTLzuEXwSt',
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)


ROOT_URLCONF = 'startup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'startup.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Karachi'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

SITE_ID = 1
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static-storage"), ]
STATIC_ROOT = os.path.join(BASE_DIR, "static-serve")
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "uploads")
CRISPY_TEMPLATE_PACK = 'bootstrap4'

EMAIL_FILE_PATH = os.path.join((BASE_DIR), "mails")
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'travellingdiaries2019@gmail.com'
SERVER_EMAIL = 'travellingdiaries2019@gmail.com'
DEFAULT_FROM_EMAIL = 'travellingdiaries2019@gmail.com'
EMAIL_HOST_PASSWORD = 'Travel1234'
EMAIL_USE_TLS = True

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/accounts/login/'


# STRIPE_SECRET_KEY = 'sk_test_8SOdjDCD0QJmzrT1dC77rNhO00RUbDsJAX'
# STRIPE_PUBLISHABLE_KEY = 'pk_test_oCAxK0CcUTHFsfOEu531pLYK00rYFcE5uu'
